// vite.config.mjs
import { fileURLToPath, URL } from "node:url";
import { defineConfig } from "file:///C:/Users/User/Desktop/MSU-Project/msu-library/node_modules/vite/dist/node/index.js";
import eslintPlugin from "file:///C:/Users/User/Desktop/MSU-Project/msu-library/node_modules/vite-plugin-eslint/dist/index.mjs";
import { resolve } from "path";
import handlebars from "file:///C:/Users/User/Desktop/MSU-Project/msu-library/node_modules/vite-plugin-handlebars/dist/index.js";
import { readdir } from "fs/promises";
import { join } from "node:path";

// src/02_pages/catalog/catalog.js
var catalog_default = {
  text: "catalog from context"
};

// vite.config.mjs
import createSvgSpritePlugin from "file:///C:/Users/User/Desktop/MSU-Project/msu-library/node_modules/vite-plugin-svg-sprite/esm/index.js";
var __vite_injected_original_dirname = "C:\\Users\\User\\Desktop\\MSU-Project\\msu-library";
var __vite_injected_original_import_meta_url = "file:///C:/Users/User/Desktop/MSU-Project/msu-library/vite.config.mjs";
var partialDirectories = /* @__PURE__ */ new Set();
var getDirectories = async (source) => {
  const entries = await readdir(source, { withFileTypes: true });
  for (const entry of entries) {
    const fullPath = join(source, entry.name);
    if (entry.isDirectory()) {
      if (entry.name !== "stories") {
        partialDirectories.add(fullPath);
        await getDirectories(fullPath);
      }
    }
  }
};
await getDirectories(join(__vite_injected_original_dirname, "./src"));
var pageData = {
  "/index.html": {
    title: "\u041C\u0413\u0423 \u0431\u0430\u0437\u0430 \u0437\u043D\u0430\u043D\u0438\u0439"
  },
  "/catalog.html": {
    title: "\u041C\u0413\u0423 \u043A\u0430\u0442\u0430\u043B\u043E\u0433",
    content: catalog_default
  }
};
var vite_config_default = defineConfig({
  root: resolve(__vite_injected_original_dirname, "src"),
  base: process.env.NODE_ENV === "production" ? "./" : "/",
  resolve: {
    alias: {
      "@": fileURLToPath(new URL("./src", __vite_injected_original_import_meta_url))
    }
  },
  build: {
    outDir: resolve(__vite_injected_original_dirname, "dist"),
    emptyOutDir: true,
    rollupOptions: {
      input: {
        index: resolve(__vite_injected_original_dirname, "src/index.html"),
        catalog: resolve(__vite_injected_original_dirname, "src/catalog.html")
      }
    }
  },
  plugins: [
    eslintPlugin(),
    handlebars({
      partialDirectory: Array.from(partialDirectories),
      context(pagePath) {
        return pageData[pagePath];
      }
    }),
    createSvgSpritePlugin({
      symbolId: "icon-[name]",
      include: "**/src/06_shared/img/svg/*.svg"
    })
  ]
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcubWpzIiwgInNyYy8wMl9wYWdlcy9jYXRhbG9nL2NhdGFsb2cuanMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCJDOlxcXFxVc2Vyc1xcXFxVc2VyXFxcXERlc2t0b3BcXFxcTVNVLVByb2plY3RcXFxcbXN1LWxpYnJhcnlcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZmlsZW5hbWUgPSBcIkM6XFxcXFVzZXJzXFxcXFVzZXJcXFxcRGVza3RvcFxcXFxNU1UtUHJvamVjdFxcXFxtc3UtbGlicmFyeVxcXFx2aXRlLmNvbmZpZy5tanNcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfaW1wb3J0X21ldGFfdXJsID0gXCJmaWxlOi8vL0M6L1VzZXJzL1VzZXIvRGVza3RvcC9NU1UtUHJvamVjdC9tc3UtbGlicmFyeS92aXRlLmNvbmZpZy5tanNcIjtpbXBvcnQgeyBmaWxlVVJMVG9QYXRoLCBVUkwgfSBmcm9tIFwibm9kZTp1cmxcIjtcclxuaW1wb3J0IHsgZGVmaW5lQ29uZmlnIH0gZnJvbSBcInZpdGVcIjtcclxuaW1wb3J0IGVzbGludFBsdWdpbiBmcm9tIFwidml0ZS1wbHVnaW4tZXNsaW50XCI7XHJcbmltcG9ydCB7IHJlc29sdmUgfSBmcm9tIFwicGF0aFwiO1xyXG5pbXBvcnQgaGFuZGxlYmFycyBmcm9tIFwidml0ZS1wbHVnaW4taGFuZGxlYmFyc1wiO1xyXG5pbXBvcnQgeyByZWFkZGlyIH0gZnJvbSBcImZzL3Byb21pc2VzXCI7XHJcbmltcG9ydCB7IGpvaW4gfSBmcm9tIFwibm9kZTpwYXRoXCI7XHJcbmltcG9ydCBjYXRhbG9nQ29udGVudCBmcm9tICcuL3NyYy8wMl9wYWdlcy9jYXRhbG9nL2NhdGFsb2cuanMnO1xyXG5pbXBvcnQgY3JlYXRlU3ZnU3ByaXRlUGx1Z2luIGZyb20gJ3ZpdGUtcGx1Z2luLXN2Zy1zcHJpdGUnO1xyXG5cclxuY29uc3QgcGFydGlhbERpcmVjdG9yaWVzID0gbmV3IFNldCgpO1xyXG5cclxuY29uc3QgZ2V0RGlyZWN0b3JpZXMgPSBhc3luYyAoc291cmNlKSA9PiB7XHJcbiAgY29uc3QgZW50cmllcyA9IGF3YWl0IHJlYWRkaXIoc291cmNlLCB7IHdpdGhGaWxlVHlwZXM6IHRydWUgfSk7XHJcbiAgZm9yIChjb25zdCBlbnRyeSBvZiBlbnRyaWVzKSB7XHJcbiAgICBjb25zdCBmdWxsUGF0aCA9IGpvaW4oc291cmNlLCBlbnRyeS5uYW1lKTtcclxuICAgIGlmIChlbnRyeS5pc0RpcmVjdG9yeSgpKSB7XHJcbiAgICAgIGlmIChlbnRyeS5uYW1lICE9PSBcInN0b3JpZXNcIikge1xyXG4gICAgICAgIHBhcnRpYWxEaXJlY3Rvcmllcy5hZGQoZnVsbFBhdGgpO1xyXG4gICAgICAgIGF3YWl0IGdldERpcmVjdG9yaWVzKGZ1bGxQYXRoKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufTtcclxuXHJcbmF3YWl0IGdldERpcmVjdG9yaWVzKGpvaW4oX19kaXJuYW1lLCBcIi4vc3JjXCIpKTtcclxuXHJcblxyXG5jb25zdCBwYWdlRGF0YSA9IHtcclxuICBcIi9pbmRleC5odG1sXCI6IHtcclxuICAgIHRpdGxlOiBcIlx1MDQxQ1x1MDQxM1x1MDQyMyBcdTA0MzFcdTA0MzBcdTA0MzdcdTA0MzAgXHUwNDM3XHUwNDNEXHUwNDMwXHUwNDNEXHUwNDM4XHUwNDM5XCIsXHJcbiAgfSxcclxuICBcIi9jYXRhbG9nLmh0bWxcIjoge1xyXG4gICAgdGl0bGU6IFwiXHUwNDFDXHUwNDEzXHUwNDIzIFx1MDQzQVx1MDQzMFx1MDQ0Mlx1MDQzMFx1MDQzQlx1MDQzRVx1MDQzM1wiLFxyXG4gICAgY29udGVudDogY2F0YWxvZ0NvbnRlbnQsXHJcbiAgfSxcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGRlZmluZUNvbmZpZyh7XHJcbiAgcm9vdDogcmVzb2x2ZShfX2Rpcm5hbWUsIFwic3JjXCIpLFxyXG4gIGJhc2U6IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSBcInByb2R1Y3Rpb25cIiA/IFwiLi9cIiA6IFwiL1wiLFxyXG4gIHJlc29sdmU6IHtcclxuICAgIGFsaWFzOiB7XHJcbiAgICAgIFwiQFwiOiBmaWxlVVJMVG9QYXRoKG5ldyBVUkwoXCIuL3NyY1wiLCBpbXBvcnQubWV0YS51cmwpKSxcclxuICAgIH0sXHJcbiAgfSxcclxuICBidWlsZDoge1xyXG4gICAgb3V0RGlyOiByZXNvbHZlKF9fZGlybmFtZSwgXCJkaXN0XCIpLFxyXG4gICAgZW1wdHlPdXREaXI6IHRydWUsXHJcbiAgICByb2xsdXBPcHRpb25zOiB7XHJcbiAgICAgIGlucHV0OiB7XHJcbiAgICAgICAgaW5kZXg6IHJlc29sdmUoX19kaXJuYW1lLCBcInNyYy9pbmRleC5odG1sXCIpLFxyXG4gICAgICAgIGNhdGFsb2c6IHJlc29sdmUoX19kaXJuYW1lLCBcInNyYy9jYXRhbG9nLmh0bWxcIiksXHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gIH0sXHJcbiAgcGx1Z2luczogW1xyXG4gICAgZXNsaW50UGx1Z2luKCksXHJcbiAgICBoYW5kbGViYXJzKHtcclxuICAgICAgcGFydGlhbERpcmVjdG9yeTogQXJyYXkuZnJvbShwYXJ0aWFsRGlyZWN0b3JpZXMpLFxyXG4gICAgICBjb250ZXh0KHBhZ2VQYXRoKSB7XHJcbiAgICAgICAgcmV0dXJuIHBhZ2VEYXRhW3BhZ2VQYXRoXTtcclxuICAgICAgfSxcclxuICAgIH0pLFxyXG4gICAgY3JlYXRlU3ZnU3ByaXRlUGx1Z2luKHtcclxuICAgICAgc3ltYm9sSWQ6ICdpY29uLVtuYW1lXScsXHJcbiAgICAgIGluY2x1ZGU6ICcqKi9zcmMvMDZfc2hhcmVkL2ltZy9zdmcvKi5zdmcnLFxyXG4gICAgfSksXHJcbiAgXSxcclxufSk7XHJcbiIsICJjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZGlybmFtZSA9IFwiQzpcXFxcVXNlcnNcXFxcVXNlclxcXFxEZXNrdG9wXFxcXE1TVS1Qcm9qZWN0XFxcXG1zdS1saWJyYXJ5XFxcXHNyY1xcXFwwMl9wYWdlc1xcXFxjYXRhbG9nXCI7Y29uc3QgX192aXRlX2luamVjdGVkX29yaWdpbmFsX2ZpbGVuYW1lID0gXCJDOlxcXFxVc2Vyc1xcXFxVc2VyXFxcXERlc2t0b3BcXFxcTVNVLVByb2plY3RcXFxcbXN1LWxpYnJhcnlcXFxcc3JjXFxcXDAyX3BhZ2VzXFxcXGNhdGFsb2dcXFxcY2F0YWxvZy5qc1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9pbXBvcnRfbWV0YV91cmwgPSBcImZpbGU6Ly8vQzovVXNlcnMvVXNlci9EZXNrdG9wL01TVS1Qcm9qZWN0L21zdS1saWJyYXJ5L3NyYy8wMl9wYWdlcy9jYXRhbG9nL2NhdGFsb2cuanNcIjtleHBvcnQgZGVmYXVsdCB7XHJcbiAgICB0ZXh0OiAnY2F0YWxvZyBmcm9tIGNvbnRleHQnXHJcbn0iXSwKICAibWFwcGluZ3MiOiAiO0FBQXVVLFNBQVMsZUFBZSxXQUFXO0FBQzFXLFNBQVMsb0JBQW9CO0FBQzdCLE9BQU8sa0JBQWtCO0FBQ3pCLFNBQVMsZUFBZTtBQUN4QixPQUFPLGdCQUFnQjtBQUN2QixTQUFTLGVBQWU7QUFDeEIsU0FBUyxZQUFZOzs7QUNONlcsSUFBTyxrQkFBUTtBQUFBLEVBQzdZLE1BQU07QUFDVjs7O0FETUEsT0FBTywyQkFBMkI7QUFSbEMsSUFBTSxtQ0FBbUM7QUFBcUssSUFBTSwyQ0FBMkM7QUFVL1AsSUFBTSxxQkFBcUIsb0JBQUksSUFBSTtBQUVuQyxJQUFNLGlCQUFpQixPQUFPLFdBQVc7QUFDdkMsUUFBTSxVQUFVLE1BQU0sUUFBUSxRQUFRLEVBQUUsZUFBZSxLQUFLLENBQUM7QUFDN0QsYUFBVyxTQUFTLFNBQVM7QUFDM0IsVUFBTSxXQUFXLEtBQUssUUFBUSxNQUFNLElBQUk7QUFDeEMsUUFBSSxNQUFNLFlBQVksR0FBRztBQUN2QixVQUFJLE1BQU0sU0FBUyxXQUFXO0FBQzVCLDJCQUFtQixJQUFJLFFBQVE7QUFDL0IsY0FBTSxlQUFlLFFBQVE7QUFBQSxNQUMvQjtBQUFBLElBQ0Y7QUFBQSxFQUNGO0FBQ0Y7QUFFQSxNQUFNLGVBQWUsS0FBSyxrQ0FBVyxPQUFPLENBQUM7QUFHN0MsSUFBTSxXQUFXO0FBQUEsRUFDZixlQUFlO0FBQUEsSUFDYixPQUFPO0FBQUEsRUFDVDtBQUFBLEVBQ0EsaUJBQWlCO0FBQUEsSUFDZixPQUFPO0FBQUEsSUFDUCxTQUFTO0FBQUEsRUFDWDtBQUNGO0FBRUEsSUFBTyxzQkFBUSxhQUFhO0FBQUEsRUFDMUIsTUFBTSxRQUFRLGtDQUFXLEtBQUs7QUFBQSxFQUM5QixNQUFNLFFBQVEsSUFBSSxhQUFhLGVBQWUsT0FBTztBQUFBLEVBQ3JELFNBQVM7QUFBQSxJQUNQLE9BQU87QUFBQSxNQUNMLEtBQUssY0FBYyxJQUFJLElBQUksU0FBUyx3Q0FBZSxDQUFDO0FBQUEsSUFDdEQ7QUFBQSxFQUNGO0FBQUEsRUFDQSxPQUFPO0FBQUEsSUFDTCxRQUFRLFFBQVEsa0NBQVcsTUFBTTtBQUFBLElBQ2pDLGFBQWE7QUFBQSxJQUNiLGVBQWU7QUFBQSxNQUNiLE9BQU87QUFBQSxRQUNMLE9BQU8sUUFBUSxrQ0FBVyxnQkFBZ0I7QUFBQSxRQUMxQyxTQUFTLFFBQVEsa0NBQVcsa0JBQWtCO0FBQUEsTUFDaEQ7QUFBQSxJQUNGO0FBQUEsRUFDRjtBQUFBLEVBQ0EsU0FBUztBQUFBLElBQ1AsYUFBYTtBQUFBLElBQ2IsV0FBVztBQUFBLE1BQ1Qsa0JBQWtCLE1BQU0sS0FBSyxrQkFBa0I7QUFBQSxNQUMvQyxRQUFRLFVBQVU7QUFDaEIsZUFBTyxTQUFTLFFBQVE7QUFBQSxNQUMxQjtBQUFBLElBQ0YsQ0FBQztBQUFBLElBQ0Qsc0JBQXNCO0FBQUEsTUFDcEIsVUFBVTtBQUFBLE1BQ1YsU0FBUztBQUFBLElBQ1gsQ0FBQztBQUFBLEVBQ0g7QUFDRixDQUFDOyIsCiAgIm5hbWVzIjogW10KfQo=
